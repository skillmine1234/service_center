class CreateSmPayments < ActiveRecord::Migration
  def change
    create_table :sm_payments, {:sequence_start_value => '1 cache 20 order increment by 1'}  do |t|
      t.string  :req_no, :limit => 20, :comment => "the Unique request no for the transactionÂ "
      t.string  :req_version, :limit => 10, :comment => "the request version for the transaction"
      t.datetime :req_timestamp, :comment => "the Time at which the request was received"
      t.string  :partner_code, :limit => 20, :comment => "the unique code assigned to the sub member bank"
      t.string  :customer_id, :limit => 15, :comment => "the customer ID assigned to the partner in the CBS. Multiple customer ids can be assigned to a single partner."
      t.string  :debit_account_no, :limit => 20, :comment => "the account to be debited. This account should be belong to the customerID that is passed in the request."
      t.string  :rmtr_account_no, :limit => 20, :comment => "the remitters account no, as maintained in the partner system."
      t.string  :rmtr_account_ifsc, :limit => 50, :comment => "the IFSC of the remitters account, as maintained in the partner system"
      t.string  :rmtr_full_name, :limit => 100,:comment => "the full name of the remitter"
      t.string  :rmtr_address1, :comment => "the address1 of the remitter"
      t.string  :rmtr_address2, :comment => "the address2 of the remitter"
      t.string  :rmtr_address3, :comment => "the address3 of the remitter"
      t.string  :rmtr_postal_code, :limit => 10, :comment => "the postal code of the remitter"
      t.string  :rmtr_city, :limit => 100, :comment => "the city name of the remitter"
      t.string  :rmtr_state, :limit => 100,:comment => "the state name of the remitter"         
      t.string  :rmtr_country, :limit => 100,:comment => "the country name of the remitter"
      t.string  :rmtr_mobile_no,:limit => 10, :comment => "the mobile no of the remitter"
      t.string  :rmtr_email_id,:limit => 100, :comment => " the email id of the remitter"         
      t.string  :bene_full_name, :limit => 100,:comment => "the full name of the beneficiary"
      t.string  :bene_address1, :comment => "the address1 of the beneficiary"
      t.string  :bene_address2, :comment => "the address2 of the beneficiary"
      t.string  :bene_address3, :comment => "the address3 of the beneficiary"
      t.string  :bene_postal_code, :limit => 100, :comment => "the postal code of the beneficiary"
      t.string  :bene_city, :limit => 100, :comment => "the city name of the beneficiary"
      t.string  :bene_state, :limit => 100,:comment => "the state name of the beneficiary"         
      t.string  :bene_country, :limit => 100,:comment => "the country name of the beneficiary"
      t.string  :bene_mobile_no,:limit => 10, :comment => "the mobile no of the beneficiary"
      t.string  :bene_email_id,:limit => 100, :comment => " the email id of the beneficiary"         
      t.string  :bene_account_no, :limit => 20, :comment => "the beneficiary account number"
      t.string  :bene_account_ifsc, :limit => 50, :comment => "the ifsc code of the beneficiary account"
      t.string  :req_transfer_type, :limit => 4, :comment => "the requested transfer type, the one use can be different"
      t.string  :transfer_ccy, :limit => 5, :comment => "the transfer amounts currency"    
      t.number  :transfer_amount, :comment => "the transfer amount"
      t.string  :rmtr_to_bene_note, :limit => 255, :comment => "the narrative for transaction of remitter to beneficiary"    
      t.string  :rep_version, :limit => 20, :comment => "the number comes in the reply, this reflects the version that is known to the server"
      t.string  :rep_no,:limit => 10, :comment => "the unique response no sent by API"
      t.integer  :attempt_no, :comment => "the attempt no returned in the response by the api"         
      t.string  :transfer_type, :limit => 4, :comment => "the transfer type, that was used by the service"
      t.string  :status_code, :limit => 50, :comment => "the status of the transaction"
      t.string  :bank_ref_no, :limit => 50, :comment => "the reference number generated by the bank, and passed on to the payment network"
      t.string :fault_code, :limit => 50, :comment => "the code that identifies the exception, if an exception occured in the ESB"
      t.string :fault_subcode, :limit => 50, :comment => "the error code that the third party will return"
      t.string :fault_reason, :limit => 1000, :comment => "the english reason of the exception, if an exception occurred in the ESB"
      t.datetime :rep_timestamp, :comment => "the Time at which the response was received"

      t.index([:req_no, :attempt_no], :unique => true, :name => 'sm_payments_01')            

    end
  end
end
