// SASS variable overrides must be declared before loading up Active Admin's styles.
//
// To view the variables that Active Admin provides, take a look at
// `app/assets/stylesheets/active_admin/mixins/_variables.css.scss` in the
// Active Admin source.
//
// For example, to change the sidebar width:
// $sidebar-width: 242px;


// Active Admin's got SASS!
@import "active_admin/mixins";
@import "active_admin/base";
@import "chosen.css.scss";
@import "active_admin/chosen";
@import "active_admin/timepicker";
//= require activeadmin-sortable

body.active_admin {
  #header{
    height: 100px\9;
    padding: 9px 0;
  }
}
body.active_admin {
  #header ul.tabs > li {
  margin-right: 1px;
  }
}
body.active_admin #header #utility_nav {
  margin: -8px;
  height: 50px;
}

body.active_admin {
  .ui-datepicker {
    font-size: 120%;
    width: 12.2em;
    padding: .2em .2em 0;
  }
  .ui-datepicker-header{
    background: image-url("datepicker-header-bg.png") no-repeat 0px 0px !important;
    height: 6px;
    padding: 16px 7px 8px;
    position: relative;
    z-index: 2000;
  }

  .ui-datepicker-month{
    width: 3.9em;
  }
  .ui-datepicker-year{
    width: 4.5em;
  }
}

// Overriding any non-variable SASS must be done after the fact.
// For example, to change the default status-tag color:
//
//   body.active_admin {
//      .status_tag { background: #6090DB; }
//   }
//
// Notice that Active Admin CSS rules are nested within a
// 'body.active_admin' selector to prevent conflicts with
// other pages in the app. It is best to wrap your changes in a
// namespace so they are properly recognized. You have options
// if you e.g. want different styles for different namespaces:
//
// .active_admin       applies to any Active Admin namespace
// .admin_namespace    applies to the admin namespace (eg: /admin)
// .other_namespace    applies to a custom namespace named other (eg: /other)

.audit_trail{
  width: 300px;
}