= simple_form_for @ecol_app, :html => {:class=>'form-horizontal', :autocomplete=>"off", :id => "ecol_app_form"} do |f|
  .control-group
    - if @ecol_app.errors.any?
      #msg-error
        - @ecol_app.errors.full_messages.each do |msg|
          = msg
          %br
  .form-main
    = f.hidden_field :lock_version
    = f.hidden_field :approved_id
    = f.hidden_field :approved_version
    = f.hidden_field :settings_cnt
    - if action_name == 'new' || EcolApp::STD_APP_CODES.include?(@ecol_app.app_code)
      .control-group
        = f.label :app_code, "*App Code", :class => 'control-label'
        = f.select :app_code, options_for_select(EcolApp::STD_APP_CODES, @ecol_app.app_code)
      .control-group
        = f.label :customer_code, "*Customer Code", :class => 'control-label'
        = f.text_field :customer_code, maxlength: 20
    - else
      .control-group
        = f.label :app_code, "*App Code", :class => 'control-label'
        = f.text_field :app_code, :readonly => true
    .control-group
      = f.label :validate_url, "Validate URL", :class => 'control-label'
      = f.text_field :validate_url, maxlength: 100
    .control-group
      = f.label :notify_url, "Notify URL", :class => 'control-label'
      = f.text_field :notify_url, maxlength: 100
    .control-group
      = f.label :http_username, "HTTP Username", :class => 'control-label'
      = f.text_field :http_username, maxlength: 50
    .control-group
      = f.label :http_password, "HTTP Password", :class => 'control-label'
      = f.password_field :http_password, :value => f.object.http_password, maxlength: 50
    - if ['edit','update','create'].include?(action_name) && !EcolApp::STD_APP_CODES.include?(@ecol_app.app_code) && @ecol_app.settings_cnt > 0
      .control-group
        - (1..@ecol_app.settings_cnt).each do |i|
          = f.label @ecol_app.send("setting#{i}_name")
          = f.send("#{@ecol_app["setting#{i}"]["setting#{i}_type"] || 'text'}_field", "setting#{i}_value")
          = f.hidden_field "setting#{i}_name", value: @ecol_app.send("setting#{i}_name")
          = f.hidden_field "setting#{i}_type", value: @ecol_app.send("setting#{i}_type")
          %br
    - elsif (['edit','update'].include?(action_name) && EcolApp::STD_APP_CODES.include?(@ecol_app.app_code)) || ['new','create'].include?(action_name)
      .control-group
        %table.table.datatable
          %thead
            %tr
              %th Setting
              %th Name
              %th Type
              %th Value
          %tbody
            - (1..5).each do |i|
              %tr
                %td
                  = i
                %td
                  = f.text_field "setting#{i}_name"
                %td
                  = f.select "setting#{i}_type", options_for_select(EcolApp::SETTING_TYPES, @ecol_app.send("setting#{i}_type"))
                %td
                  = f.text_field "setting#{i}_value"
    .control-group
      - if !@ecol_app.udfs_cnt.nil? && @ecol_app.udfs_cnt > 0
        - (1..@ecol_app.udfs_cnt).each do |i|
          = f.hidden_field "udf#{i}_name", value: @ecol_app.send("udf#{i}_name")
          = f.hidden_field "udf#{i}_type", value: @ecol_app.send("udf#{i}_type")
  .form-actions
    - (f.object.new_record? and f.object.app_code.nil?) ? label_name = "Create" : label_name = "Update"
    = f.button "submit" ,:class=>"btn btn-primary", :id => 'submit_ecol_app', :value => label_name + ' Ecol App'
    = link_to :Cancel,'/ecol_apps', :name => 'cancel', :class=>"cancel btn"