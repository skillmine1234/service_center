- m = build_menu(group)
- service = sc_service rescue nil
- unless m.nil?
  %h1 #{m[:name]}
  .slide-container
    - unless m[:common_items].empty?
      - if m[:common_items].include?(:incoming_file)
        .box
          = link_to incoming_files_path(:sc_service => service) do
            = image_tag 'upload.png', :size => "80x80"
          %br
            = "File Uploads"
      - if m[:common_items].include?(:outgoing_file)
        .box
          = link_to outgoing_files_path(:sc_service => service) do
            = image_tag 'outgoing_file.png', :size => "80x80"
          %br
            = "Outgoing Files"
      - if m[:common_items].include?(:csv_export)
        .box
          = link_to csv_exports_path(group: m[:name]) do
            = image_tag 'csv_export.png', :size => "80x80"
          %br
            = "Csv Exports"
      - if m[:common_items].include?(:aml_search)
        .box
          = link_to  sdn_search_path do
            = image_tag 'aml.jpeg', :size => "80x80"
          %br
            = "AML Search"
      - if m[:common_items].include?(:reports)
        .box
          = link_to obdx_reports_path do
            = image_tag 'obdx/reports.png', :size => "80x80"
          %br
            = "Reports"
    - if respond_to?("#{group}_unapproved_records_path", sc_service: service)
      .box
        = link_to send("#{group}_unapproved_records_path") do
          = image_tag 'work-list.jpg', :size => "80x80"
        %br
        = "Approval Worklist"
    - elsif group == "obdx"
      .box
        = link_to send("#{group}_bm_unapproved_records_path") do
          = image_tag 'work-list.jpg', :size => "80x80"
        %br
        = "Approval Worklist"
    - else  
      - if group != 'gm' && group != 'dpesb' && group != 'ctl'
        .box
          = link_to unapproved_records_path(group_name: m[:group], sc_service: service) do
            = image_tag 'work-list.jpg', :size => "80x80"
          %br
          = "Approval Worklist"
    - if m[:reports].present?
      .box
        = link_to rp_routes.send("#{group}_available_reports_path") do
          = image_tag 'available_report.png', :size => "80x80"
        %br
          = "Available Reports"
      .box
        = link_to rp_routes.send("#{group}_reports_path") do
          = image_tag 'reports_icon.png', :size => "80x80"
        %br
          = "Generated Reports"
      - if rp_routes.respond_to?("#{group}_system_generated_reports_reports_path")
        .box
          = link_to "/rp/reports/#{group}_system_generated_reports" do
            = image_tag 'settings_icon.png', :size => "80x80"
          %br
            = "System Generated Reports"
  .slide-container
    - m[:items].each do |i|
      .box
        = link_to i[:link_to] do
          = image_tag i[:image_tag], :size => i[:size]
        %br
          = i[:name]
    - if m[:ops_menu].present?
      .box
        = link_to operations_path(group: group) do
          = image_tag "operations.png", :size => "80x80"
        %br
        = "Operations"
    -  if m[:obdx_operations].present?
      .box
        = link_to image_tag("obdx/delete_payment.png", :size => "80x80"),{:controller=>"payment_schedules",:action=>"index"}
        %br
        = "Payment Schedule"
    - if m[:common_items].include?(:dashboard_view)
      .box
        = link_to image_tag("dashboard/dashboard_views.png", :size => "80x80"),{:controller=>"dashboard_views",:action=>"index"}
    - if m[:common_items].include?(:tokenization)
      .box
        = link_to tokenize_data_partner_lcy_rates_path do
          = image_tag 'inw/token.png', :size => "80x80"
        %br
          = "Data tokenization"
    - if m[:common_items].include?(:purge_request)
      .box
        = link_to purging_request_form_purgings_path do
          = image_tag 'datapurge/purge_request.png', :size => "80x80"
        %br
          = "Purging Request"
    - if m[:common_items].include?(:purge_analytics)
      .box
        = link_to purge_analytics_purgings_path do
          = image_tag 'datapurge/purge_analytics.png', :size => "80x80"
        %br
          = "Purging Analytics"           


